# -*- coding: utf-8 -*-
"""Untitled2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1bkvCTL33OJ-sYUUxnypoNr3Gq-CCcC_9
"""

import numpy as np
import pandas as pd
import sklearn
from sklearn.decomposition import TruncatedSVD
import matplotlib.pyplot as plt

#Style used for Matplotlib data insight
plt.style.use("ggplot")

url = 'https://raw.githubusercontent.com/SegarBox/Recommendation-System/main/ratings_Beauty.csv'
df1 = pd.read_csv(url)

url = 'https://raw.githubusercontent.com/SegarBox/Recommendation-System/main/ratings_Beauty.csv'
amazon_ratings = pd.read_csv(url)
amazon_ratings = amazon_ratings.dropna()
amazon_ratings.head()

popular_products = pd.DataFrame(amazon_ratings.groupby('ProductId')['Rating'].count())
most_popular = popular_products.sort_values('Rating', ascending=False)
most_popular.head(10)

most_popular.head(100).plot(kind = "bar")

#Subset of product ratings

amazon_ratings1 = amazon_ratings.head(10000)
ratings_utility_matrix = amazon_ratings1.pivot_table(values='Rating', index='UserId', columns='ProductId', fill_value=0)
ratings_utility_matrix.head()

X = ratings_utility_matrix.T
X.head()

#Decomposing the Matrix

SVD = TruncatedSVD(n_components=10)
decomposed_matrix = SVD.fit_transform(X)

#Define correlation matrix by customer purchased

correlation_matrix = np.corrcoef(decomposed_matrix)

#input number of Customer

num = int(input("Enter number of Customer :"))
i = X.index[num]
print("Product ID :", i)

#Correlation for all items with the item purchased based on items rated by other customers who bought the same product

product_names = list(X.index)
product_ID = product_names.index(i)
correlation_product_ID = correlation_matrix[product_ID]

#Top 10 highly correlated products in sequence

Recommend = list(X.index[correlation_product_ID > 0.90])

#Removed item that already bought by the customer
Recommend.remove(i)
Recommend[0:9]

